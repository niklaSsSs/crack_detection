# Configuration for Mac Training (CPU/MPS optimized)
# Optimiert für Apple Silicon Macs

experiment:
  name: "crack_encoder_mac"
  seed: 42
  device: "cpu"  # CPU ist schneller und stabiler als MPS!
  mixed_precision: false

data:
  data_dir: "./SDNET2018"
  input_size: 256  # Native resolution, kein Upscaling
  num_workers: 4
  pin_memory: false  # Nicht für CPU/MPS

  # Split ratios
  train_ratio: 0.8
  val_ratio: 0.1
  test_ratio: 0.1

  # Normalization (ImageNet)
  mean: [0.485, 0.456, 0.406]
  std: [0.229, 0.224, 0.225]

model:
  backbone: "efficientnet_b0"
  pretrained: true
  num_classes: 1  # Binary classification
  dropout: 0.2

training:
  batch_size: 64  # Größere Batch für CPU
  epochs: 20

  optimizer:
    name: "adamw"
    lr: 3.0e-4
    weight_decay: 1.0e-4
    betas: [0.9, 0.999]

  scheduler:
    name: "cosine"
    warmup_epochs: 1
    min_lr: 1.0e-6

  loss:
    name: "bce_with_logits"
    pos_weight_auto: true  # Automatisch aus Klassenverhältnis

  early_stopping:
    patience: 5
    min_delta: 0.001
    metric: "val_auc"
    mode: "max"

  # Gradient clipping
  grad_clip: 1.0

  # Checkpoint
  save_top_k: 3
  save_last: true

augmentation:
  train:
    # Geometrisch
    horizontal_flip: 0.5
    rotate_limit: 7
    rotate_prob: 0.3

    # Photometrisch (reduziert für CPU)
    brightness_contrast: 0.5
    hue_saturation: 0.3
    blur: 0.3

  val:
    # Nur Resize + Normalize
    enabled: false

logging:
  log_dir: "./outputs/logs"
  checkpoint_dir: "./outputs/checkpoints"
  visualization_dir: "./outputs/visualizations"

  log_every_n_steps: 50
  save_plots: true

  metrics:
    - "loss"
    - "auc"
    - "f1"
    - "precision"
    - "recall"

  domain_metrics: true  # Per-Domain Metriken

hardware:
  num_threads: 4  # CPU Threads
  deterministic: true
